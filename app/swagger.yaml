swagger: '2.0'
info:
  title: Heartbeat API
  description: Dead-Man-Switch API
  version: "1.0.0"
# the domain of the service
host: heartbeat.example.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  /heartbeats:
    post:
      summary: Create a heartbeat resource
      consumes:
        - application/json
      parameters: 
        - in: body
          name: heartbeat
          description: The heartbeat object to create
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
              cron:
                type: string
      tags:
        - heartbeat
      responses:
        200:
          description: heartbeat resource
          schema:
            type: array
            items:
              $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /heartbeats/{id}:
    get:
      summary: get a heartbeat
      description: |
        Get a Heartbeat Resource
      parameters:
        - name: id
          in: path
          description: id or name of Heartbeat
          required: true
          type: string
      tags:
        - heartbeat
      responses:
        200:
          description: heartbeat resource
          schema:
            type: array
            items:
              $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update an existing heartbeat
      consumes:
        - application/json
      parameters: 
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: heartbeat
          schema:
            type: object
            properties:
              cron:
                type: string
              status:
                type: string
      tags:
        - heartbeat
      responses:
        200:
          description: heartbeat resource
          schema:
            type: array
            items:
              $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Update an existing heartbeat
      consumes:
        - application/json
      parameters: 
        - in: path
          name: id
          required: true
          type: string
        - in: body
          name: heartbeat
          schema:
            type: object
            properties:
              cron:
                type: string
              status:
                type: string
      tags:
        - heartbeat
      responses:
        200:
          description: heartbeat resource
          schema:
            type: array
            items:
              $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /heartbeats/{id}/checkin:
    put:
      summary: checkin a heartbeat
      description: |
        Perform a 'checkin' action on a heartbeat
      parameters:
        - name: id
          in: path
          description: id of name of Heartbeat
          required: true
          type: string
      tags:
        - heartbeat
      responses:
        200:
          description: heartbeat resource
          schema:
            type: array
            items:
              $ref: '#/definitions/Heartbeat'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /users/{id}:
    get:
      summary: get a user
      description: |
        Get a User Resource
      parameters: 
        - name: id
          in: path
          description: id or name of user
          required: true
          type: string
      tags:
        - user
      responses:
        200:
          description: user resource
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Heartbeat:
    properties:
      id:
        type: integer
        description: Unique identifier for a specific heartbeat
      name:
        type: string
        description: Common name for a heartbeat
      createBy:
        type: integer
        description: UserID that created this resource
      createTime:
        type: string
        format: date-time
        description: Time this resource was created
      status:
        type: string
        description: current state of the heartbeat
      cron:
        type: string
        description: Cron string that describes how often a heartbeat should check in
      lastCheckIn:
        type: string
        format: date-time
        description: Last time this heartbeat checked in
      nextCheckin:
        type: string
        format: date-time
        description: Next time this heartbeat needs to check in by
  User:
    properties:
      id:
        type: integer
        description: Unique identifier for a specific user
      name:
        type: string
        description: common name for a user
      createBy:
        type: integer
        description: User who created this reseource
      createTime:
        type: string
        format: date-time
        description: Time this resource was created
  CheckIn:
    properties:
      id:
        type: integer
        description: Unique identifier for a specific checkin
      createBy:
        type: integer
        description: User id that created this resource
      createTime:
        type: string
        format: date-time
        description: Time of checkin
      heartbeatId:
        type: integer
        description: Heartbeat this checkin was for
      ipAddress:
        type: string
        description: IPAddress that created this checkin
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
